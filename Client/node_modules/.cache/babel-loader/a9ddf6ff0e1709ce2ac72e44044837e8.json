{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\croja\\\\Desktop\\\\Protectos\\\\ChatCORR\\\\Client\\\\src\\\\components\\\\ChatFooter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport checkPageStatus from \"../utils/functions\"; // Importación de una función de utilidad\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFooter = _ref => {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  // Estado local para almacenar el mensaje\n  const [message, setMessage] = useState(\"\"); // Función para emitir evento de escritura al escribir en el campo de mensaje\n\n  const handleTyping = () => socket.emit(\"typing\", `${localStorage.getItem(\"userName\")} Escribiendo`); // Función para enviar el mensaje al presionar el botón \"SEND\"\n\n\n  const handleSendMessage = e => {\n    e.preventDefault();\n\n    if (message.trim() && localStorage.getItem(\"userName\")) {\n      // Envío del mensaje al servidor con información de texto, nombre, ID, hora y fecha\n      socket.emit(\"message\", {\n        text: message,\n        name: localStorage.getItem(\"userName\"),\n        id: `${socket.id}${Math.random()}`,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\n        date: new Date(Date.now()).toLocaleDateString()\n      }); // Llamada a una función para verificar el estado de la página\n\n      checkPageStatus(message, localStorage.getItem(\"userName\"));\n    }\n\n    setMessage(\"\"); // Limpiar el campo de mensaje después de enviar\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat__footer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write message\",\n        className: \"message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: handleTyping // Evento de escritura al presionar una tecla\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sendBtn\",\n        children: \"SEND\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatFooter, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n\n_c = ChatFooter;\nexport default ChatFooter;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFooter\");","map":{"version":3,"names":["React","useState","checkPageStatus","ChatFooter","socket","message","setMessage","handleTyping","emit","localStorage","getItem","handleSendMessage","e","preventDefault","trim","text","name","id","Math","random","time","Date","now","getHours","getMinutes","date","toLocaleDateString","target","value"],"sources":["C:/Users/croja/Desktop/Protectos/ChatCORR/Client/src/components/ChatFooter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport checkPageStatus from \"../utils/functions\"; // Importación de una función de utilidad\r\n\r\nconst ChatFooter = ({ socket }) => {\r\n    // Estado local para almacenar el mensaje\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // Función para emitir evento de escritura al escribir en el campo de mensaje\r\n    const handleTyping = () => socket.emit(\"typing\", `${localStorage.getItem(\"userName\")} Escribiendo`);\r\n\r\n    // Función para enviar el mensaje al presionar el botón \"SEND\"\r\n    const handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if (message.trim() && localStorage.getItem(\"userName\")) {\r\n            // Envío del mensaje al servidor con información de texto, nombre, ID, hora y fecha\r\n            socket.emit(\"message\", {\r\n                text: message,\r\n                name: localStorage.getItem(\"userName\"),\r\n                id: `${socket.id}${Math.random()}`,\r\n                time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes(),\r\n                date: new Date(Date.now()).toLocaleDateString()\r\n            });\r\n            // Llamada a una función para verificar el estado de la página\r\n            checkPageStatus(message, localStorage.getItem(\"userName\"));\r\n        }\r\n        setMessage(\"\"); // Limpiar el campo de mensaje después de enviar\r\n    }\r\n\r\n    return (\r\n        <div className='chat__footer'>\r\n            <form className='form' onSubmit={handleSendMessage}>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder='Write message' \r\n                    className='message' \r\n                    value={message} \r\n                    onChange={e => setMessage(e.target.value)}\r\n                    onKeyDown={handleTyping} // Evento de escritura al presionar una tecla\r\n                />\r\n                <button className=\"sendBtn\">SEND</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatFooter;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,oBAA5B,C,CAAkD;;;;AAElD,MAAMC,UAAU,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC/B;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC,CAF+B,CAI/B;;EACA,MAAMM,YAAY,GAAG,MAAMH,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAuB,GAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiC,cAA1D,CAA3B,CAL+B,CAO/B;;;EACA,MAAMC,iBAAiB,GAAIC,CAAD,IAAO;IAC7BA,CAAC,CAACC,cAAF;;IACA,IAAIR,OAAO,CAACS,IAAR,MAAkBL,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAtB,EAAwD;MACpD;MACAN,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAuB;QACnBO,IAAI,EAAEV,OADa;QAEnBW,IAAI,EAAEP,YAAY,CAACC,OAAb,CAAqB,UAArB,CAFa;QAGnBO,EAAE,EAAG,GAAEb,MAAM,CAACa,EAAG,GAAEC,IAAI,CAACC,MAAL,EAAc,EAHd;QAInBC,IAAI,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KAAkC,GAAlC,GAAwC,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB,EAJ3B;QAKnBC,IAAI,EAAE,IAAIJ,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBI,kBAArB;MALa,CAAvB,EAFoD,CASpD;;MACAxB,eAAe,CAACG,OAAD,EAAUI,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAV,CAAf;IACH;;IACDJ,UAAU,CAAC,EAAD,CAAV,CAd6B,CAcb;EACnB,CAfD;;EAiBA,oBACI;IAAK,SAAS,EAAC,cAAf;IAAA,uBACI;MAAM,SAAS,EAAC,MAAhB;MAAuB,QAAQ,EAAEK,iBAAjC;MAAA,wBACI;QACI,IAAI,EAAC,MADT;QAEI,WAAW,EAAC,eAFhB;QAGI,SAAS,EAAC,SAHd;QAII,KAAK,EAAEN,OAJX;QAKI,QAAQ,EAAEO,CAAC,IAAIN,UAAU,CAACM,CAAC,CAACe,MAAF,CAASC,KAAV,CAL7B;QAMI,SAAS,EAAErB,YANf,CAM6B;;MAN7B;QAAA;QAAA;QAAA;MAAA,QADJ,eASI;QAAQ,SAAS,EAAC,SAAlB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH,CAxCD;;GAAMJ,U;;KAAAA,U;AA0CN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}