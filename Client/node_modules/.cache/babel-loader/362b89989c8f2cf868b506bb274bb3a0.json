{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\croja\\\\Desktop\\\\Protectos\\\\ChatCORR\\\\Client\\\\src\\\\components\\\\ChatPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport ChatBar from './ChatBar';\nimport ChatBody from './ChatBody';\nimport ChatFooter from './ChatFooter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatPage = _ref => {\n  _s();\n\n  let {\n    socket\n  } = _ref;\n  // Estado local para almacenar mensajes y estado de escritura\n  const [messages, setMessages] = useState([]);\n  const [typingStatus, setTypingStatus] = useState(\"\"); // Referencia al último mensaje para scroll automático\n\n  const lastMessageRef = useRef(null); // Efecto para recibir mensajes nuevos del servidor\n\n  useEffect(() => {\n    socket.on(\"messageResponse\", data => setMessages([...messages, data]));\n  }, [socket, messages]); // Efecto para cargar mensajes iniciales al montar el componente\n\n  useEffect(() => {\n    function fetchMessages() {\n      fetch(\"http://localhost:4000/api\").then(response => response.json()).then(data => setMessages(data.messages));\n    }\n\n    fetchMessages();\n  }, []); // Efecto para recibir estado de escritura de otros usuarios\n\n  useEffect(() => {\n    socket.on(\"typingResponse\", data => setTypingStatus(data));\n  }, [socket]); // Efecto para hacer scroll automático al último mensaje\n\n  useEffect(() => {\n    var _lastMessageRef$curre;\n\n    (_lastMessageRef$curre = lastMessageRef.current) === null || _lastMessageRef$curre === void 0 ? void 0 : _lastMessageRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(ChatBar, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__main\",\n      children: [/*#__PURE__*/_jsxDEV(ChatBody, {\n        messages: messages,\n        typingStatus: typingStatus,\n        lastMessageRef: lastMessageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatFooter, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatPage, \"cw7YB5549v6AGzJ3SLIF69YydAY=\");\n\n_c = ChatPage;\nexport default ChatPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ChatBar","ChatBody","ChatFooter","ChatPage","socket","messages","setMessages","typingStatus","setTypingStatus","lastMessageRef","on","data","fetchMessages","fetch","then","response","json","current","scrollIntoView","behavior"],"sources":["C:/Users/croja/Desktop/Protectos/ChatCORR/Client/src/components/ChatPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport ChatBar from './ChatBar';\r\nimport ChatBody from './ChatBody';\r\nimport ChatFooter from './ChatFooter';\r\n\r\nconst ChatPage = ({ socket }) => { \r\n  // Estado local para almacenar mensajes y estado de escritura\r\n  const [messages, setMessages] = useState([]);\r\n  const [typingStatus, setTypingStatus] = useState(\"\");\r\n  \r\n  // Referencia al último mensaje para scroll automático\r\n  const lastMessageRef = useRef(null);\r\n  \r\n  // Efecto para recibir mensajes nuevos del servidor\r\n  useEffect(() => {\r\n    socket.on(\"messageResponse\", data => setMessages([...messages, data]));\r\n  }, [socket, messages]);\r\n  \r\n  // Efecto para cargar mensajes iniciales al montar el componente\r\n  useEffect(() => {\r\n    function fetchMessages() {\r\n      fetch(\"http://localhost:4000/api\")\r\n        .then(response => response.json())\r\n        .then(data => setMessages(data.messages));\r\n    }\r\n    fetchMessages();\r\n  }, []);\r\n  \r\n  // Efecto para recibir estado de escritura de otros usuarios\r\n  useEffect(() => {\r\n    socket.on(\"typingResponse\", data => setTypingStatus(data));\r\n  }, [socket]);\r\n  \r\n  // Efecto para hacer scroll automático al último mensaje\r\n  useEffect(() => {\r\n    lastMessageRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n  \r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatBar socket={socket} />\r\n      <div className='chat__main'>\r\n        <ChatBody messages={messages} typingStatus={typingStatus} lastMessageRef={lastMessageRef} />\r\n        <ChatFooter socket={socket} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,QAAQ,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC/B;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD,CAH+B,CAK/B;;EACA,MAAMW,cAAc,GAAGV,MAAM,CAAC,IAAD,CAA7B,CAN+B,CAQ/B;;EACAF,SAAS,CAAC,MAAM;IACdO,MAAM,CAACM,EAAP,CAAU,iBAAV,EAA6BC,IAAI,IAAIL,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,IAAd,CAAD,CAAhD;EACD,CAFQ,EAEN,CAACP,MAAD,EAASC,QAAT,CAFM,CAAT,CAT+B,CAa/B;;EACAR,SAAS,CAAC,MAAM;IACd,SAASe,aAAT,GAAyB;MACvBC,KAAK,CAAC,2BAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQH,IAAI,IAAIL,WAAW,CAACK,IAAI,CAACN,QAAN,CAF3B;IAGD;;IACDO,aAAa;EACd,CAPQ,EAON,EAPM,CAAT,CAd+B,CAuB/B;;EACAf,SAAS,CAAC,MAAM;IACdO,MAAM,CAACM,EAAP,CAAU,gBAAV,EAA4BC,IAAI,IAAIH,eAAe,CAACG,IAAD,CAAnD;EACD,CAFQ,EAEN,CAACP,MAAD,CAFM,CAAT,CAxB+B,CA4B/B;;EACAP,SAAS,CAAC,MAAM;IAAA;;IACd,yBAAAY,cAAc,CAACQ,OAAf,gFAAwBC,cAAxB,CAAuC;MAAEC,QAAQ,EAAE;IAAZ,CAAvC;EACD,CAFQ,EAEN,CAACd,QAAD,CAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE,QAAC,OAAD;MAAS,MAAM,EAAED;IAAjB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE,QAAC,QAAD;QAAU,QAAQ,EAAEC,QAApB;QAA8B,YAAY,EAAEE,YAA5C;QAA0D,cAAc,EAAEE;MAA1E;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,UAAD;QAAY,MAAM,EAAEL;MAApB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA1CD;;GAAMD,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}